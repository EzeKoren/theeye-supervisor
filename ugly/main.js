"use strict";var ErrorHandler=require("./lib/errorHandler"),logger=require("./lib/logger")("eye:supervisor:main");logger.log("initializing supervisor"),process.on("SIGINT",function(){logger.log('supervisor process ends on "SIGINT"'),process.exit(0)}),process.on("SIGTERM",function(){logger.log('supervisor process ends on "SIGTERM"'),process.exit(0)}),process.on("exit",function(){logger.log('supervisor process ends on "process.exit"'),process.exit(0)}),process.on("uncaughtException",function(e){logger.error('supervisor process on "uncaughtException"'),logger.error(e);var r=new ErrorHandler;r.sendExceptionAlert(e)}),logger.log("setting environment"),require("./environment").setenv(function(){logger.log("connecting mongo db"),require("./lib/mongodb").connect(function(){logger.log("initializing scheduler");var e=require("./service/scheduler");e.initialize(function(){logger.log("initializing events dispatcher");var r=require("./service/events");r.initialize(function(){if(!process.env.NO_MONITORING){logger.log("initializing monitor");var s=require("./service/monitor");s.start()}logger.log("initializing server");var i=require("./app");i.start(),i.jobDispatcher=require("./service/job"),i.eventDispatcher=r,i.scheduler=e,i.customer=require("./service/customer"),logger.log("supervisor is running")})})})});
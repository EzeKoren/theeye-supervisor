"use strict";var json=require("../lib/jsonresponse"),HostStats=require("../entity/host/stats").Entity,NotificationService=require("../service/notification"),debug=require("../lib/logger")("eye:supervisor:controller:psaux"),paramsResolver=require("../router/param-resolver"),ResourceManager=require("../service/resource");module.exports=function(e,t){e.post("/psaux/:hostname",[t.authenticate("bearer",{session:!1}),paramsResolver.customerNameToEntity({}),paramsResolver.hostnameToHost({})],controller.create)};var controller={create:function(e,t,r){var o=e.host,n=e.params.psaux;if(!o)return t.send(404,"host not found");if(!n)return t.send(400,"psaux data required");debug.log("Handling host psaux data"),HostStats.findOneByHostAndType(o._id,"psaux",function(e,t){if(e)debug.error(e);else if(null==t)debug.log("creating host psaux"),HostStats.create(o,"psaux",n);else{debug.log("updating host psaux");var r=new Date;t.last_update=r,t.last_update_timestamp=r.getTime(),t.stats=n,t.save()}});var s={type:"psaux",ensureOne:!0};return ResourceManager.findHostResources(o,s,function(e,t){if(!e&&t){var r=new ResourceManager(t);r.handleState({state:"normal"})}}),NotificationService.sendSNSNotification({timestamp:(new Date).getTime(),stat:e.params.psaux,customer_name:o.customer_name,hostname:o.hostname,type:"psaux"},{topic:"host-stats",subject:"psaux_update"}),t.send(200),r()}};
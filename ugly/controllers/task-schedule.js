"use strict";var logger=require("../lib/logger")("eye:supervisor:controller:task-schedule"),Scheduler=require("../service/scheduler"),router=require("../router"),resolver=router.resolve;module.exports=function(e,t){var r=[t.authenticate("bearer",{session:!1}),resolver.customerNameToEntity({}),router.userCustomer,resolver.idToEntity({param:"task"})];e.post("/:customer/task/schedule",r,controller.create),e.get("/:customer/task/:task/schedule",r,controller.get),e.del("/:customer/task/:task/schedule/:schedule",r,controller.remove),e.get("/:customer/task/:task/schedule/:schedule",[resolver.customerNameToEntity({}),resolver.idToEntity({param:"task"})],controller.remove)};var controller={get:function(e,t,r){var o=e.task;return o?void Scheduler.getTaskScheduleData(o._id,function(e,r){return e?(logger.error("Scheduler had an error retrieving data for %s",o._id),logger.error(e),t.send(500)):void t.send(200,{scheduleData:r})}):t.send(404,"task not found")},remove:function(e,t,r){var o=e.task,n=e.params.schedule;return e.params.task?o?(n||t.send(400,"schedule id required"),void Scheduler.cancelTaskSchedule(o.id,n,function(e,r){return e?(logger.error("Scheduler had an error canceling schedule %s",n),logger.error(e),t.send(500)):void t.send(200,{status:"done"})})):t.send(404,"task not found"):t.send(400,"task id required")},create:function(e,t,r){var o=e.task,n=e.body.scheduleData;if(!o)return t.send(400,json.error("task required"));if(!n||!n.runDate)return t.send(406,json.error("Must have a date"));var s=e.user,i=e.customer;return s?i?void Scheduler.scheduleTask({task:o,customer:i,user:s,schedule:n},function(e){return e?(logger.error(e),t.send(500,e)):void t.send(200,{nextRun:n.runDate})}):t.send(400,json.error("customer required")):t.send(400,json.error("user required"))}};
"use strict";function generateAgentConfig(e,t){var r=[];async.each(e,function(e,t){var o={type:e.type,name:e.name,looptime:e.looptime,resource_id:e.resource_id};debug("setting up monitor configuration"),function(t){switch(e.type){case"scraper":o=extend(o,e.config),t(null,o);break;case"process":o.ps=e.config.ps,t(null,o);break;case"script":Script.findById(e.config.script_id,function(r,n){if(r)return t(r);if(null==n){var i=new Error("invalid script id for worker config. script not available");throw i.statusCode=500,i}n.publish(function(r,n){o.script=n,o.script.arguments=e.config.script_arguments||[],o.script.runas=e.config.script_runas||"",t(null,o)})});break;case"dstat":o.limit=e.config.limit,t(null,o);break;case"psaux":t(null,o);break;case"host":t();break;default:var r=("unhandled monitor type "+e.type,new Error);debug(r),t(r)}}(function(e,o){!e&&o&&r.push(o),t()})},function(e){debug("completed"),e?(debug("some monitor produces an error"),debug(e.message),t(null)):t({workers:r})})}var extend=require("util")._extend,debug=require("debug")("eye:supervisor:controller:agent-config"),async=require("async"),Script=require("../entity/script").Entity,json=require("../lib/jsonresponse"),paramsResolver=require("../router/param-resolver"),ResourceMonitorService=require("../service/resource/monitor");module.exports=function(e,t){e.get("/:customer/agent/:hostname/config",[t.authenticate("bearer",{session:!1}),paramsResolver.customerNameToEntity({}),paramsResolver.hostnameToHost({})],controller.fetch)};var controller={fetch:function(e,t,r){var o=e.user,n=e.host,i=e.customer;return n?i?o?void ResourceMonitorService.findBy({enable:!0,host_id:n._id,customer_id:i._id},function(e,r){e&&t.send(500),generateAgentConfig(r,function(e){return e?void t.send(200,e):t.send(500)})}):t.send(400,"authentication required"):t.send(400,"customer required"):t.send(400,"hostname required")}};
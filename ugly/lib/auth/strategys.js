"use strict";function SetBasicStrategy(){return passport.use(new BasicStrategy(function(e,t,r){debug.log("new connection [basic]"),User.findOne({client_id:e,client_secret:t},function(t,o){return t?r(t):o?(debug.log('client "%s" connected [basic]',o.client_id),r(null,o)):(debug.error("invalid request, client %s",e),r(Error("invalid user data"),!1))})})),passport}function SetBearerStrategy(){return passport.use(new BearerStrategy(function(e,t){var r=require("moment");r().format("YYYY-MM-DD HH:00:00");debug.log("new connection [bearer]"),User.findOne({token:e},function(r,o){return r?(debug.error("error fetching user by token"),debug.error(r),t(r)):o?(debug.log('client "%s" connected [bearer]',o.client_id),t(null,o)):(debug.error("invalid or outdated token %s",e),t(null,!1))})})),passport}var passport=require("passport"),util=require("util"),User=require("../../entity/user").Entity,debug=require("../logger")("eye:supervisor:auth:strategys"),BearerStrategy=require("passport-http-bearer").Strategy,BasicStrategy=require("passport-http").BasicStrategy;exports.setStrategy=function(e){return"bearer"==e?SetBearerStrategy():"basic"==e?SetBasicStrategy():void 0};
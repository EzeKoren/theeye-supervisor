"use strict";function customerNamesToUserCustomers(e,r){function t(e){return function(r){Customer.findOne({name:e},function(t,n){if(t)return r(t);if(!n)return debug.error("WARNING customer %s not found!",e),r();var i={_id:n._id,name:n.name,customer:n._id};r(null,i)})}}if(!e||0==e.length)return r(null,[]);for(var n=[],i=0;i<e.length;i++){var o=e[i];n.push(t(o))}return async.parallel(n,r)}var debug=require("../lib/logger")("eye:supervisor:service:user"),User=require("../entity/user").Entity,Customer=require("../entity/customer").Entity,crypto=require("crypto"),Schema=require("mongoose").Schema,async=require("async"),UserService=module.exports={findBy:function(e,r){var t={};for(var n in e)switch(n){case"customer_id":t["customers._id"]=e.customer_id;break;case"customer_name":t["customers.name"]=e.customer_name;break;case"credential":t[n]=e[n]}debug.log("querying users by %j",t),User.find(t).exec(function(e,t){return e?r(e):r(null,t)})},update:function(e,r,t){var n=r.customers;debug.log("updating user %s data",e),customerNamesToUserCustomers(n,function(n,i){return n?t(n):void User.findOne({_id:e},function(e,n){if(e)return t(e);for(var o in r)"customers"!=o?n[o]=r[o]:n.customers=i;n.save(function(e){return e?t(e):void t(null,n)})})})},randomHash:function(){return crypto.randomBytes(20).toString("hex")},create:function(e,r){var t=this;customerNamesToUserCustomers(e.customers,function(n,i){if(n)return r(n);var o={client_id:e.client_id||t.randomHash(),client_secret:e.client_secret||t.randomHash(),token:t.randomHash(),email:e.email,customers:i,credential:e.credential,enabled:e.enabled||!1},s=new User(o);s.save(function(e,t){return e?r(e):r(null,t)})})}};
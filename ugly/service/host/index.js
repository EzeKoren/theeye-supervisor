"use strict";function HostService(e){this.host=e}function sendEventNotification(e,t){var r="[HIGH] :customer/:hostname :event",o=r.replace(":customer",e.customer_name).replace(":hostname",e.hostname);switch(t){case"agent_unreachable":o=o.replace(":event","unreachable");break;case"agent_running":o=o.replace(":event","recovered")}var n="email/host/"+t,i={hostname:e.hostname};Handlebars.render(n,i,function(t){CustomerService.getAlertEmails(e.customer_name,function(r,n){NotificationService.sendEmailNotification({to:n.join(","),customer_name:e.customer_name,subject:o,content:t})})}),NotificationService.sendSNSNotification({resource:"host",event:t,customer_name:e.customer_name,hostname:e.hostname},{topic:"events",subject:"host_update"})}function createBaseMonitors(e,t){logger.log("creating base monitors"),t||(t=function(){});var r=Object.assign({},e,{type:"dstat"}),o=Object.assign({},e,{type:"psaux"});createMonitor([e.host._id],r),createMonitor([e.host._id],o)}var _=require("lodash"),Host=require("../../entity/host").Entity,Resource=require("../../entity/resource").Entity,NotificationService=require("../notification"),CustomerService=require("../customer"),Handlebars=require("../../lib/handlebars"),ResourceService=require("../resource"),HostGroupService=require("./group"),AgentUpdateJob=require("../../entity/job").AgentUpdate,logger=require("../../lib/logger")("eye:supervisor:service:host"),createMonitor=ResourceService.createResourceOnHosts;HostService.prototype={agentUnreachable:function(){var e="agent_unreachable",t=this.host;CustomerService.getCustomerConfig(t.customer_id,function(r,o){t.fails_count+=1;var n=o.fails_count_alert;logger.log("fails count %d/%d",t.fails_count,n),t.fails_count>n&&t.state!=e&&(logger.log('host "%s" state has changed to "%s"',t.hostname,e),t.state=e,logger.log('processing "%s" event',e),sendEventNotification(t,e)),t.save()})},agentRunning:function(){var e="agent_running",t=this.host;t.state!=e&&(logger.log('host "%s" state has changed to "%s"',t.hostname,e),t.state=e,t.fails_count=0,t.save(),logger.log('processing "%s" event',e),sendEventNotification(t,e))}},HostService.register=function(e,t){var r=e.hostname,o=e.customer,n=e.info;logger.log('registering new host "%s"',r);var i={hostname:r,agent_version:n.agent_version||"not_informed",ip:n.ip||"not_informed",os_name:n.os_name||"not_informed",os_version:n.os_version||"not_informed",state:n.state||"not_informed"};Host.create(i,o,function(r,n){if(r)throw new Error("host registration error. "+r.message);logger.log("host registered. creating host resource");var i={user:e.user,host_id:n._id,hostname:n.hostname,customer:o,customer_id:o._id,customer_name:o.name,name:n.hostname,type:"host",monitor_type:"host",enable:!0,description:n.hostname};ResourceService.create(i,function(e,r){var o=r.resource;logger.log("resource registered."),t(e,{host:n,resource:o}),i.host=n,i.resource=o,HostGroupService.searchAndRegisterHostIntoGroup(n,function(e,t){return e?logger.error(e):t?(o.template=t,o.save(),void AgentUpdateJob.create({host_id:n._id})):createBaseMonitors(i)})})})},HostService.fetchBy=function(e,t){logger.log("fetching hosts by customer %s",e.customer_name),Host.find(e,function(e,r){if(e)return t(e,null);var o=[];r.forEach(function(e,t){o.push(e.publish())}),t(null,o)})},HostService.disableHostsByCustomer=function(e,t){Host.find({customer_id:e._id}).exec(function(e,t){if(0!=t.length)for(var r=0;r<t.length;r++){var o=t[r];o.enable=!1,o.save(function(e){if(e)throw logger.error("ERROR updating host property"),e})}})},module.exports=HostService;
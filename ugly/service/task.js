"use strict";function registerTaskCRUDOperation(e,t){var r=config.elasticsearch.keys.task.crud;elastic.submit(e,r,t)}function validateTaskTemplateData(e,t){if(!e.script_id){var r=new Error("script is required");return r.statusCode=400,t(r,!1)}Script.findById(e.script_id,function(r,n){if(r)throw r;if(!n){var i=new Error("script not found");return i.statusCode=400,t(i,!1)}t(null,e)})}function taskToTemplate(e,t){Task.findById(e,function(e,r){if(e)throw new Error(e);if(!r){var n=new Error("task not found. invalid task id");return n.statusCode=400,t(n)}r.toTemplate(t)})}var debug=require("debug")("eye:supervisor:service:task"),Tag=require("../entity/tag").Entity,Host=require("../entity/host").Entity,Task=require("../entity/task").Entity,ScraperTask=require("../entity/task/scraper").Entity,Script=require("../entity/script").Entity,TaskTemplate=require("../entity/task/template").Entity,TaskEvent=require("../entity/event").TaskEvent,async=require("async"),_=require("lodash"),validator=require("../router/param-validator"),filter=require("../router/param-filter"),elastic=require("../lib/elastic"),config=require("config"),TaskService={remove:function(e){var t=e.task;Task.remove({_id:t._id},function(r){return r?e.fail(r):(TaskEvent.remove({emitter:t._id},function(t){return t?e.fail(t):void registerTaskCRUDOperation(e.customer.name,{name:e.task.name,customer_name:e.customer.name,user_id:e.user.id,user_email:e.user.email,operation:"delete"})}),void e.done())})},update:function(e){var t=e.task,r=e.updates;t.update(r,function(r){return r?e.fail(r):(debug("publishing task"),void t.publish(function(r){registerTaskCRUDOperation(e.customer.name,{name:t.name,customer_name:e.customer.name,user_id:e.user.id,user_email:e.user.email,operation:"update"}),e.done(r)}))})},fetchBy:function(e,t){var r=[];Task.find(e,function(e,n){if(e)return debug("error %j",e),t(e);var i=null==n||n instanceof Array&&0===n.length;if(i)debug("cannot find task with that criteria"),t(null,[]);else{debug("publishing tasks");var o=[];n.forEach(function(e){o.push(function(t){e.publish(function(e){r.push(e),t()})})}),async.parallel(o,function(){t(null,r)})}})},createManyTasks:function(e,t){function r(t){return function(r){t.match(/^[a-fA-F0-9]{24}$/)?Host.findById(t,function(i,o){return i?r(i):o?void n.create(_.extend({},e,{host:o,host_id:o._id,customer_id:e.customer._id,user_id:e.user._id}),r):r(new Error("not found host id "+t))}):r(new Error("invalid host id "+t),null)}}var n=this,i=[];debug("creating tasks");var o=e.hosts;debug("creating task on hosts %j",o);for(var s in o){var a=o[s];i.push(r(a))}async.parallel(i,t)},createFromTemplate:function(e){var t=e.templateData,r=e.host,n=e.customer,i=e.done;debug("creating task from template %j",t);var o=t._id||t.id;this.create(_.extend(t,{customer:n,host:r||null,host_id:r&&r._id||null,template:o,id:null,user_id:null,_type:"Task"}),function(e,t){e&&debug(e),i(e,t)})},create:function(e,t){function r(r){debug('task type "%s" created %j',r.type,r),registerTaskCRUDOperation(e.customer.name,{name:r.name,customer_name:e.customer.name,user_id:e.user&&e.user.id||null,user_email:e.user&&e.user.email||null,operation:"create"}),r.publish(function(e){t(null,e)})}if(debug("creating task with host id %s",e.host_id),"scraper"==e.type)var n=new ScraperTask(e);else var n=new Task(e);n.save(function(i){return i?(debug(i),t(i)):(r(n),e.tags&&Array.isArray(e.tags)&&Tag.create(e.tags,e.customer),void TaskEvent.create({name:"success",customer:e.customer,emitter:n},{name:"failure",customer:e.customer,emitter:n},function(e){return debug(e)}))})}};TaskService.tasksToTemplates=function(e,t,r,n){if(!e){var i=new Error("tasks definition required");return i.statusCode=400,n(i)}if(!Array.isArray(e)){var i=new Error("tasks must be an array");return i.statusCode=400,n(i)}if(0==e.length)return debug("no tasks. skipping"),n(null,[]);var o=[],s=_.after(e.length,function(){debug("all tasks templates processed"),n(null,o)});debug("processing %s tasks",e.length);for(var a=0;a<e.length;a++){var u=e[a];if(debug("processing task %j",u),0===Object.keys(u).length){var i=new Error("invalid task definition");return i.statusCode=400,n(i)}if(u.hasOwnProperty("id")){if(!validator.isMongoId(u.id)){var i=new Error("invalid task id");return i.statusCode=400,n(i)}taskToTemplate(u.id,function(e,t){e&&n(e),debug("task to template done"),o.push(t),s()})}else validateTaskTemplateData(u,function(e,i){if(e||!i){var a=new Error("invalid task data");return a.statusCode=400,a.data=e,n(a)}i.customer=t,i.user=r,i._type="TaskTemplate",TaskTemplate.create(i,function(e,t){debug("task template create from scratch done"),o.push(t),s()})})}},module.exports=TaskService;